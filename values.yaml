# application specific
ingressnginx:
  controller:
    kind: Deployment
    hostNetwork: true
    hostPort:
      enable: true
    service:
      type: NodePort
      nodePorts:
        http: 30080
        https: 30443
    config:
      use-forwarded-headers: "true"
    nodeSelector:
      ingress-ready: "true"
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Equal
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Equal

observability:
  enable: true
  alertmanager:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /alertmanager/$2
      ingressClassName: nginx
      paths:
      - /alertmanager(/|$)(.*)
    alertmanagerSpec:
      routePrefix: /alertmanager

  grafana:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /grafana/$2
      ingressClassName: nginx
      path: /grafana(/|$)(.*)
    grafana.ini:
      security:
        cookie_secure: false
      server:
        domain: localhost
        protocol: http
        root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        serve_from_sub_path: true
    additionalDataSources:
    - name: loki
      type: loki
      url: http://loki.observability.svc.cluster.local:3100
    - name: tempo
      type: tempo
      url: http://tempo.observability.svc.cluster.local:3100

  prometheus:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /prometheus/$2
      ingressClassName: nginx
      paths:
      - /prometheus(/|$)(.*)
    prometheusSpec:
      externalUrl: /prometheus
      routePrefix: /prometheus
      serviceMonitorSelectorNilUsesHelmValues: false
      retention: 5d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: local-path
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi

logging:
  enable: true

cloudflared:
  enable: true
  tunnelID: "82cbda74-e016-4326-a4fb-35cfb39bd955"
  existingSecret: "tunnel-credentials"
  ingress:
  - hostname: "k3d-ctd.buildaplatform.io"
    service: http://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443
  - service: http://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443
