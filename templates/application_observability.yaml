{{- if .Values.observability.enable }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: observability
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 45.28.0
    helm:
      values: |-
        alertmanager:
          ingress:
            enabled: {{ .Values.observability.alertmanager.ingress.enable }}
            annotations:
              cert-manager.io/cluster-issuer: buildaplatform
            ingressClassName: nginx
            hosts:
            - alertmanager.local.buildaplatform.io
            paths:
            - /
            tls:
            - secretName: alertmanager-tls
              hosts:
                - alertmanager.local.buildaplatform.io

        grafana:
          defaultDashboardsTimezone: browser
          ingress:
            enabled: {{ .Values.observability.grafana.ingress.enable }}
            annotations:
              cert-manager.io/cluster-issuer: buildaplatform
            ingressClassName: nginx
            hosts:
            - grafana.local.buildaplatform.io
            paths:
            - /
            tls:
            - secretName: grafana-tls
              hosts:
                - grafana.local.buildaplatform.io
          grafana.ini:
            security:
              cookie_secure: false
            server:
              domain: localdev
          additionalDataSources:
          - name: loki
            type: loki
            url: http://loki.observability.svc.cluster.local:3100
          - name: tempo
            type: tempo
            url: http://tempo.observability.svc.cluster.local:3100

        prometheus:
          ingress:
            enabled: {{ .Values.observability.prometheus.ingress.enable }}
            annotations:
              cert-manager.io/cluster-issuer: buildaplatform
            ingressClassName: nginx
            hosts:
            - prometheus.local.buildaplatform.io
            paths:
            - /
            tls:
            - secretName: prometheus-tls
              hosts:
                - prometheus.local.buildaplatform.io
          prometheusSpec:
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            retention: {{ .Values.observability.prometheus.retention }}
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: {{ .Values.observability.prometheus.storage.class }}
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: {{ .Values.observability.prometheus.storage.size }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
{{- end }}
