{{- if .Values.observability.enable }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: observability
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 45.28.0
    helm:
      values: |
        alertmanager:
          ingress:
            enabled: {{ .Values.observability.alertmanager.ingress.enable }}
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /alertmanager/$2
            ingressClassName: nginx
            paths:
            - /alertmanager(/|$)(.*)
          alertmanagerSpec:
            routePrefix: /alertmanager

        grafana:
          defaultDashboardsTimezone: browser
          ingress:
            enabled: {{ .Values.observability.grafana.ingress.enable }}
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /grafana/$2
            ingressClassName: nginx
            path: /grafana(/|$)(.*)
          grafana.ini:
            security:
              cookie_secure: false
            server:
              domain: localhost
              protocol: http
              root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
              serve_from_sub_path: true
          additionalDataSources:
          - name: loki
            type: loki
            url: http://loki.observability.svc.cluster.local:3100
          - name: tempo
            type: tempo
            url: http://tempo.observability.svc.cluster.local:3100

        prometheus:
          ingress:
            enabled: {{ .Values.observability.prometheus.ingress.enable }}
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /prometheus/$2
            ingressClassName: nginx
            paths:
            - /prometheus(/|$)(.*)
          prometheusSpec:
            externalUrl: /prometheus
            routePrefix: /prometheus
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            retention: {{ .Values.observability.prometheus.retention }}
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: {{ .Values.observability.prometheus.storage.class }}
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: {{ .Values.observability.prometheus.storage.size }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
{{- end }}
